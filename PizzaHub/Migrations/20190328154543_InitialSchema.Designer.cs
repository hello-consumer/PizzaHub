// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaHub.Data;

namespace PizzaHub.Migrations
{
    [DbContext(typeof(PizzaDbContext))]
    [Migration("20190328154543_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaHub.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PizzaHub.Data.CustomerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactPhoneNumber")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryCity")
                        .HasMaxLength(100);

                    b.Property<string>("DeliveryState")
                        .HasMaxLength(100);

                    b.Property<string>("DeliveryStreet")
                        .HasMaxLength(100);

                    b.Property<string>("DeliveryZipCode")
                        .HasMaxLength(20);

                    b.Property<string>("SpecialInstructions");

                    b.HasKey("Id");

                    b.ToTable("CustomerOrder");
                });

            modelBuilder.Entity("PizzaHub.Data.CustomerOrderPizzaToppings", b =>
                {
                    b.Property<int>("LineItemId")
                        .HasColumnName("LineItemID");

                    b.Property<int>("ToppingId")
                        .HasColumnName("ToppingID");

                    b.Property<int>("CustomerOrderId")
                        .HasColumnName("CustomerOrderID");

                    b.HasKey("LineItemId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.HasIndex("CustomerOrderId", "LineItemId");

                    b.ToTable("CustomerOrderPizzaToppings");
                });

            modelBuilder.Entity("PizzaHub.Data.CustomerOrderPizzas", b =>
                {
                    b.Property<int>("CustomerOrderId")
                        .HasColumnName("CustomerOrderID");

                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LineItemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("OrderPrice")
                        .HasColumnType("money");

                    b.Property<int>("RestaurantId")
                        .HasColumnName("RestaurantID");

                    b.Property<int?>("SizeId")
                        .HasColumnName("SizeID");

                    b.Property<int?>("StyleId")
                        .HasColumnName("StyleID");

                    b.HasKey("CustomerOrderId", "LineItemId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("CustomerOrderPizzas");
                });

            modelBuilder.Entity("PizzaHub.Data.Pizza", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnName("RestaurantID");

                    b.Property<int>("SizeId")
                        .HasColumnName("SizeID");

                    b.Property<int>("StyleId")
                        .HasColumnName("StyleID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("RestaurantId", "SizeId", "StyleId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("PizzaHub.Data.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("PizzaHub.Data.RestaurantToppings", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnName("RestaurantID");

                    b.Property<int>("ToppingId")
                        .HasColumnName("ToppingID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("RestaurantId", "ToppingId")
                        .HasName("PK_PizzaToppings");

                    b.HasIndex("ToppingId");

                    b.ToTable("RestaurantToppings");
                });

            modelBuilder.Entity("PizzaHub.Data.Sizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("PizzaHub.Data.Styles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("PizzaHub.Data.Toppings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("PizzaHub.Data.CustomerOrderPizzaToppings", b =>
                {
                    b.HasOne("PizzaHub.Data.Toppings", "Topping")
                        .WithMany("CustomerOrderPizzaToppings")
                        .HasForeignKey("ToppingId")
                        .HasConstraintName("FK_CustomerOrderPizzaToppings_Toppings");

                    b.HasOne("PizzaHub.Data.CustomerOrderPizzas", "CustomerOrderPizzas")
                        .WithMany("CustomerOrderPizzaToppings")
                        .HasForeignKey("CustomerOrderId", "LineItemId")
                        .HasConstraintName("FK_CustomerOrderPizzaToppings_CustomerOrderPizzas");
                });

            modelBuilder.Entity("PizzaHub.Data.CustomerOrderPizzas", b =>
                {
                    b.HasOne("PizzaHub.Data.CustomerOrder", "CustomerOrder")
                        .WithMany("CustomerOrderPizzas")
                        .HasForeignKey("CustomerOrderId")
                        .HasConstraintName("FK_CustomerOrderPizzas_CustomerORder")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaHub.Data.Restaurant", "Restaurant")
                        .WithMany("CustomerOrderPizzas")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK_CustomerOrderPizzas_RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaHub.Data.Sizes", "Size")
                        .WithMany("CustomerOrderPizzas")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK_CustomerOrderPizzas_SizeID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PizzaHub.Data.Styles", "Style")
                        .WithMany("CustomerOrderPizzas")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_CustomerOrderPizzas_StyleID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("PizzaHub.Data.Pizza", b =>
                {
                    b.HasOne("PizzaHub.Data.Restaurant", "Restaurant")
                        .WithMany("Pizza")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK_Pizza_Restaurant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaHub.Data.Sizes", "Size")
                        .WithMany("Pizza")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK_Pizza_Size");

                    b.HasOne("PizzaHub.Data.Styles", "Style")
                        .WithMany("Pizza")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_Pizza_Style");
                });

            modelBuilder.Entity("PizzaHub.Data.Restaurant", b =>
                {
                    b.HasOne("PizzaHub.Data.City", "City")
                        .WithMany("Restaurant")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Restaurant_City")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaHub.Data.RestaurantToppings", b =>
                {
                    b.HasOne("PizzaHub.Data.Restaurant", "Restaurant")
                        .WithMany("RestaurantToppings")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK_RestaurantToppings_Restaurant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaHub.Data.Toppings", "Topping")
                        .WithMany("RestaurantToppings")
                        .HasForeignKey("ToppingId")
                        .HasConstraintName("FK_RestaurantToppings_Topping")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
